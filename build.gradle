buildscript {
    repositories {
        maven { url 'http://repo1.maven.org/maven2' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.4'
    }
}
apply plugin: 'android-library'

repositories {
    mavenCentral()
}

dependencies {
    // workaround for issue: https://groups.google.com/forum/?fromgroups#!topic/adt-dev/0ZAP8AVUZVw
    compile files('libs/android-support-v4.jar', 'libs/jackson-core-asl-1.9.2.jar', 'libs/jackson-mapper-asl-1.9.2.jar')

    instrumentTestCompile 'commons-io:commons-io:2.0.1'

    // once that issue is fixed, it should use this instead:
    // compile files('libs/android-support-v4.jar')
    // compile 'org.codehaus.jackson:jackson-core-asl:1.9.2'
    // compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.2'
}

android {
    compileSdkVersion 17
    buildToolsVersion "17.0.0"

    defaultConfig {
        minSdkVersion 7
        targetSdkVersion 16
    }

}

// .so hack - this is a hack until gradle supports dependencies on .so objects
// the hack is described here:
//      http://stackoverflow.com/questions/16683775/include-so-library-in-apk-in-android-studio
// I had to modify it slightly to change buildDir -> getProjectDir()

task copyNativeLibs(type: Copy) {
    from(new File(project(':CBLite').getProjectDir(), 'native-libs')) { include '**/*.so' }
    into new File(buildDir, 'native-libs')
}

tasks.withType(Compile) { compileTask -> compileTask.dependsOn copyNativeLibs }

clean.dependsOn 'cleanCopyNativeLibs'

tasks.withType(com.android.build.gradle.tasks.PackageApplication) { pkgTask ->
    pkgTask.jniDir new File(buildDir, 'native-libs')
}

// /end .so hack
